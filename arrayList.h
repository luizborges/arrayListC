/**
 */
#ifndef ARRAYLIST_H
#define ARRAYLIST_H

#ifdef __cplusplus
extern "C" {
#endif

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

////////////////////////////////////////////////////////////////////////////////
// Defines
////////////////////////////////////////////////////////////////////////////////
#define ArrayList_End(LIST) \
  ArrayList_End_(LIST);     \
  LIST = NULL;

////////////////////////////////////////////////////////////////////////////////
// Structs
////////////////////////////////////////////////////////////////////////////////
typedef struct arrayList_cell_t_{
  void *content;
  struct arrayList_cell_t_ *next;
  struct arrayList_cell_t_ *prev;
} arrayList_cell_t;

typedef struct {
  arrayList_cell_t *head;
  arrayList_cell_t *tail;
  int len;

  //============
  arrayList_cell_t *cell;
  int pos;
  
  //============
  char func[15];
} arrayList_to;

////////////////////////////////////////////////////////////////////////////////
// Typedefs
////////////////////////////////////////////////////////////////////////////////
typedef arrayList_to* arrayList_t;

////////////////////////////////////////////////////////////////////////////////
// Constructs
////////////////////////////////////////////////////////////////////////////////
arrayList_t ArrayList_New();


////////////////////////////////////////////////////////////////////////////////
// Functions
////////////////////////////////////////////////////////////////////////////////
void *ArrayList_Get(const arrayList_t list, const int pos);
void *ArrayList_Set(arrayList_t list, const int pos, const void *content);
void  ArrayList_Add(arrayList_t list, const int pos, const void *content);
void *ArrayList_Del(arrayList_t list, const int pos);
int   ArrayList_Len(const arrayList_t list);
void  ArrayList_End_(arrayList_t list);

#ifdef __cplusplus
}
#endif
#endif // ARRAYLIST_H

////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////





