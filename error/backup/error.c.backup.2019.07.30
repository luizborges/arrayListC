/**
 */
////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include "error.h"

////////////////////////////////////////////////////////////////////////////////
// Private Variables
////////////////////////////////////////////////////////////////////////////////
static char ErrorInfo[1024] = "";
static char ErrorMsg[4096] = "";


////////////////////////////////////////////////////////////////////////////////
// Private Functions Head
////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////
// Private Functions
////////////////////////////////////////////////////////////////////////////////




////////////////////////////////////////////////////////////////////////////////
// Construct Functions
////////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // configurações gerais da lista
  //////////////////////////////////////////////////////////////////////////////
 
////////////////////////////////////////////////////////////////////////////////
// Public Functions
////////////////////////////////////////////////////////////////////////////////
void Error_(const char *file, const int line,
            const char *func, const char *msgUser, ...) {
  va_list msgUserArgs;
  //////////////////////////////////////////////////////////////////////////////
  // time information
  //////////////////////////////////////////////////////////////////////////////
  time_t timer = time(NULL);
  const char *strTimer = asctime(localtime(&timer));
  
  //////////////////////////////////////////////////////////////////////////////
  // file & line & function information
  //////////////////////////////////////////////////////////////////////////////
  sprintf(ErrorInfo, "File: \"%s\"\nFunction: \"%s\"\nLine: %d", file, func, line);
  
  //////////////////////////////////////////////////////////////////////////////
  // user msg information
  //////////////////////////////////////////////////////////////////////////////
  if(msgUser != NULL) { // se o usuário enviou mensagem de error
    va_start(msgUserArgs, msgUser);
    vsprintf(ErrorMsg, msgUser, msgUserArgs);
    va_end(msgUserArgs);
  }
  
  //////////////////////////////////////////////////////////////////////////////
  // user msg information
  //////////////////////////////////////////////////////////////////////////////
  fprintf(stderr, "ERROR %s\n%s\nTime Error: %s\n", ErrorMsg, ErrorInfo, strTimer);
    
  abort();
}





















