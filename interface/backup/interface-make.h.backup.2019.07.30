/**
 * 
 */

#define Interface_Make1(INTERFACE_NAME, TYPE1, FUNC1, ARG1) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1};\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 1, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make2(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 2, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make3(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2,\
                        TYPE3, FUNC3, ARG3 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 3, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make4(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2,\
                        TYPE3, FUNC3, ARG3, TYPE4, FUNC4, ARG4 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 4, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make5(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2,\
                        TYPE3, FUNC3, ARG3, TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 5, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make6(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2,\
                        TYPE3, FUNC3, ARG3, TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 6, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make7(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 7, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make8(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 8, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME }; 
	 
	 
#define Interface_Make9(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8, TYPE9, FUNC9, ARG9 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
		TYPE9 (*FUNC9) ARG9;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8, #FUNC9 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8, &_interfaceVarRef##INTERFACE_NAME.FUNC9 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 9, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };	 
	 
	 
#define Interface_Make10(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8, TYPE9, FUNC9, ARG9, TYPE10, FUNC10, ARG10 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
		TYPE9 (*FUNC9) ARG9;\
		TYPE10 (*FUNC10) ARG10;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8, #FUNC9, #FUNC10 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8, &_interfaceVarRef##INTERFACE_NAME.FUNC9,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC10 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 10, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };	 
	 
	 
#define Interface_Make11(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8, TYPE9, FUNC9, ARG9, TYPE10, FUNC10, ARG10, TYPE11, FUNC11, ARG11 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
		TYPE9 (*FUNC9) ARG9;\
		TYPE10 (*FUNC10) ARG10;\
		TYPE11 (*FUNC11) ARG11;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8, #FUNC9, #FUNC10, #FUNC11 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8, &_interfaceVarRef##INTERFACE_NAME.FUNC9,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC10, &_interfaceVarRef##INTERFACE_NAME.FUNC11 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 11, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };	 


#define Interface_Make12(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8, TYPE9, FUNC9, ARG9, TYPE10, FUNC10, ARG10, TYPE11, FUNC11, ARG11,\
                        TYPE12, FUNC12, ARG12 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
		TYPE9 (*FUNC9) ARG9;\
		TYPE10 (*FUNC10) ARG10;\
		TYPE11 (*FUNC11) ARG11;\
		TYPE12 (*FUNC12) ARG12;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8, #FUNC9, #FUNC10, #FUNC11, #FUNC12 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8, &_interfaceVarRef##INTERFACE_NAME.FUNC9,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC10, &_interfaceVarRef##INTERFACE_NAME.FUNC11,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC12 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 12, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make13(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8, TYPE9, FUNC9, ARG9, TYPE10, FUNC10, ARG10, TYPE11, FUNC11, ARG11,\
                        TYPE12, FUNC12, ARG12, TYPE13, FUNC13, ARG13 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
		TYPE9 (*FUNC9) ARG9;\
		TYPE10 (*FUNC10) ARG10;\
		TYPE11 (*FUNC11) ARG11;\
		TYPE12 (*FUNC12) ARG12;\
		TYPE13 (*FUNC13) ARG13;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8, #FUNC9, #FUNC10, #FUNC11, #FUNC12, #FUNC13 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8, &_interfaceVarRef##INTERFACE_NAME.FUNC9,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC10, &_interfaceVarRef##INTERFACE_NAME.FUNC11,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC12, &_interfaceVarRef##INTERFACE_NAME.FUNC13};\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 13, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make14(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8, TYPE9, FUNC9, ARG9, TYPE10, FUNC10, ARG10, TYPE11, FUNC11, ARG11,\
                        TYPE12, FUNC12, ARG12, TYPE13, FUNC13, ARG13, TYPE14, FUNC14, ARG14 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
		TYPE9 (*FUNC9) ARG9;\
		TYPE10 (*FUNC10) ARG10;\
		TYPE11 (*FUNC11) ARG11;\
		TYPE12 (*FUNC12) ARG12;\
		TYPE13 (*FUNC13) ARG13;\
		TYPE14 (*FUNC14) ARG14;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8, #FUNC9, #FUNC10, #FUNC11, #FUNC12, #FUNC13, #FUNC14 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8, &_interfaceVarRef##INTERFACE_NAME.FUNC9,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC10, &_interfaceVarRef##INTERFACE_NAME.FUNC11,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC12, &_interfaceVarRef##INTERFACE_NAME.FUNC13,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC14 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 14, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make15(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8, TYPE9, FUNC9, ARG9, TYPE10, FUNC10, ARG10, TYPE11, FUNC11, ARG11,\
                        TYPE12, FUNC12, ARG12, TYPE13, FUNC13, ARG13, TYPE14, FUNC14, ARG14, TYPE15, FUNC15, ARG15 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
		TYPE9 (*FUNC9) ARG9;\
		TYPE10 (*FUNC10) ARG10;\
		TYPE11 (*FUNC11) ARG11;\
		TYPE12 (*FUNC12) ARG12;\
		TYPE13 (*FUNC13) ARG13;\
		TYPE14 (*FUNC14) ARG14;\
		TYPE15 (*FUNC15) ARG15;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8, #FUNC9, #FUNC10, #FUNC11, #FUNC12, #FUNC13, #FUNC14, #FUNC15 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8, &_interfaceVarRef##INTERFACE_NAME.FUNC9,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC10, &_interfaceVarRef##INTERFACE_NAME.FUNC11,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC12, &_interfaceVarRef##INTERFACE_NAME.FUNC13,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC14, &_interfaceVarRef##INTERFACE_NAME.FUNC15 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 15, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make16(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8, TYPE9, FUNC9, ARG9, TYPE10, FUNC10, ARG10, TYPE11, FUNC11, ARG11,\
                        TYPE12, FUNC12, ARG12, TYPE13, FUNC13, ARG13, TYPE14, FUNC14, ARG14, TYPE15, FUNC15, ARG15,\
                        TYPE16, FUNC16, ARG16) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
		TYPE9 (*FUNC9) ARG9;\
		TYPE10 (*FUNC10) ARG10;\
		TYPE11 (*FUNC11) ARG11;\
		TYPE12 (*FUNC12) ARG12;\
		TYPE13 (*FUNC13) ARG13;\
		TYPE14 (*FUNC14) ARG14;\
		TYPE15 (*FUNC15) ARG15;\
		TYPE16 (*FUNC16) ARG16;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8, #FUNC9, #FUNC10, #FUNC11, #FUNC12, #FUNC13, #FUNC14, #FUNC15, #FUNC16 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8, &_interfaceVarRef##INTERFACE_NAME.FUNC9,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC10, &_interfaceVarRef##INTERFACE_NAME.FUNC11,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC12, &_interfaceVarRef##INTERFACE_NAME.FUNC13,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC14, &_interfaceVarRef##INTERFACE_NAME.FUNC15,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC16 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 16, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make17(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8, TYPE9, FUNC9, ARG9, TYPE10, FUNC10, ARG10, TYPE11, FUNC11, ARG11,\
                        TYPE12, FUNC12, ARG12, TYPE13, FUNC13, ARG13, TYPE14, FUNC14, ARG14, TYPE15, FUNC15, ARG15,\
                        TYPE16, FUNC16, ARG16, TYPE17, FUNC17, ARG17 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
		TYPE9 (*FUNC9) ARG9;\
		TYPE10 (*FUNC10) ARG10;\
		TYPE11 (*FUNC11) ARG11;\
		TYPE12 (*FUNC12) ARG12;\
		TYPE13 (*FUNC13) ARG13;\
		TYPE14 (*FUNC14) ARG14;\
		TYPE15 (*FUNC15) ARG15;\
		TYPE16 (*FUNC16) ARG16;\
		TYPE17 (*FUNC17) ARG17;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8, #FUNC9, #FUNC10, #FUNC11, #FUNC12, #FUNC13, #FUNC14, #FUNC15, #FUNC16, #FUNC17 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8, &_interfaceVarRef##INTERFACE_NAME.FUNC9,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC10, &_interfaceVarRef##INTERFACE_NAME.FUNC11,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC12, &_interfaceVarRef##INTERFACE_NAME.FUNC13,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC14, &_interfaceVarRef##INTERFACE_NAME.FUNC15,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC16, &_interfaceVarRef##INTERFACE_NAME.FUNC17 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 17, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make18(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8, TYPE9, FUNC9, ARG9, TYPE10, FUNC10, ARG10, TYPE11, FUNC11, ARG11,\
                        TYPE12, FUNC12, ARG12, TYPE13, FUNC13, ARG13, TYPE14, FUNC14, ARG14, TYPE15, FUNC15, ARG15,\
                        TYPE16, FUNC16, ARG16, TYPE17, FUNC17, ARG17, TYPE18, FUNC18, ARG18 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
		TYPE9 (*FUNC9) ARG9;\
		TYPE10 (*FUNC10) ARG10;\
		TYPE11 (*FUNC11) ARG11;\
		TYPE12 (*FUNC12) ARG12;\
		TYPE13 (*FUNC13) ARG13;\
		TYPE14 (*FUNC14) ARG14;\
		TYPE15 (*FUNC15) ARG15;\
		TYPE16 (*FUNC16) ARG16;\
		TYPE17 (*FUNC17) ARG17;\
		TYPE18 (*FUNC18) ARG18;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8, #FUNC9, #FUNC10, #FUNC11, #FUNC12, #FUNC13, #FUNC14, #FUNC15, #FUNC16, #FUNC17, #FUNC18 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8, &_interfaceVarRef##INTERFACE_NAME.FUNC9,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC10, &_interfaceVarRef##INTERFACE_NAME.FUNC11,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC12, &_interfaceVarRef##INTERFACE_NAME.FUNC13,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC14, &_interfaceVarRef##INTERFACE_NAME.FUNC15,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC16, &_interfaceVarRef##INTERFACE_NAME.FUNC17,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC18 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 18, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make19(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8, TYPE9, FUNC9, ARG9, TYPE10, FUNC10, ARG10, TYPE11, FUNC11, ARG11,\
                        TYPE12, FUNC12, ARG12, TYPE13, FUNC13, ARG13, TYPE14, FUNC14, ARG14, TYPE15, FUNC15, ARG15,\
                        TYPE16, FUNC16, ARG16, TYPE17, FUNC17, ARG17, TYPE18, FUNC18, ARG18, TYPE19, FUNC19, ARG19 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
		TYPE9 (*FUNC9) ARG9;\
		TYPE10 (*FUNC10) ARG10;\
		TYPE11 (*FUNC11) ARG11;\
		TYPE12 (*FUNC12) ARG12;\
		TYPE13 (*FUNC13) ARG13;\
		TYPE14 (*FUNC14) ARG14;\
		TYPE15 (*FUNC15) ARG15;\
		TYPE16 (*FUNC16) ARG16;\
		TYPE17 (*FUNC17) ARG17;\
		TYPE18 (*FUNC18) ARG18;\
		TYPE19 (*FUNC19) ARG19;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8, #FUNC9, #FUNC10, #FUNC11, #FUNC12, #FUNC13, #FUNC14, #FUNC15, #FUNC16, #FUNC17, #FUNC18, #FUNC19 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8, &_interfaceVarRef##INTERFACE_NAME.FUNC9,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC10, &_interfaceVarRef##INTERFACE_NAME.FUNC11,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC12, &_interfaceVarRef##INTERFACE_NAME.FUNC13,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC14, &_interfaceVarRef##INTERFACE_NAME.FUNC15,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC16, &_interfaceVarRef##INTERFACE_NAME.FUNC17,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC18, &_interfaceVarRef##INTERFACE_NAME.FUNC19 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 19, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make20(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8, TYPE9, FUNC9, ARG9, TYPE10, FUNC10, ARG10, TYPE11, FUNC11, ARG11,\
                        TYPE12, FUNC12, ARG12, TYPE13, FUNC13, ARG13, TYPE14, FUNC14, ARG14, TYPE15, FUNC15, ARG15,\
                        TYPE16, FUNC16, ARG16, TYPE17, FUNC17, ARG17, TYPE18, FUNC18, ARG18, TYPE19, FUNC19, ARG19,\
                        TYPE20, FUNC20, ARG20 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
		TYPE9 (*FUNC9) ARG9;\
		TYPE10 (*FUNC10) ARG10;\
		TYPE11 (*FUNC11) ARG11;\
		TYPE12 (*FUNC12) ARG12;\
		TYPE13 (*FUNC13) ARG13;\
		TYPE14 (*FUNC14) ARG14;\
		TYPE15 (*FUNC15) ARG15;\
		TYPE16 (*FUNC16) ARG16;\
		TYPE17 (*FUNC17) ARG17;\
		TYPE18 (*FUNC18) ARG18;\
		TYPE19 (*FUNC19) ARG19;\
		TYPE20 (*FUNC20) ARG20;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8, #FUNC9, #FUNC10, #FUNC11, #FUNC12, #FUNC13, #FUNC14, #FUNC15, #FUNC16, #FUNC17, #FUNC18, #FUNC19, #FUNC20 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8, &_interfaceVarRef##INTERFACE_NAME.FUNC9,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC10, &_interfaceVarRef##INTERFACE_NAME.FUNC11,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC12, &_interfaceVarRef##INTERFACE_NAME.FUNC13,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC14, &_interfaceVarRef##INTERFACE_NAME.FUNC15,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC16, &_interfaceVarRef##INTERFACE_NAME.FUNC17,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC18, &_interfaceVarRef##INTERFACE_NAME.FUNC19,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC20 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 20, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };


#define Interface_Make21(INTERFACE_NAME, TYPE1, FUNC1, ARG1, TYPE2, FUNC2, ARG2, TYPE3, FUNC3, ARG3,\
                        TYPE4, FUNC4, ARG4, TYPE5, FUNC5, ARG5, TYPE6, FUNC6, ARG6, TYPE7, FUNC7, ARG7,\
                        TYPE8, FUNC8, ARG8, TYPE9, FUNC9, ARG9, TYPE10, FUNC10, ARG10, TYPE11, FUNC11, ARG11,\
                        TYPE12, FUNC12, ARG12, TYPE13, FUNC13, ARG13, TYPE14, FUNC14, ARG14, TYPE15, FUNC15, ARG15,\
                        TYPE16, FUNC16, ARG16, TYPE17, FUNC17, ARG17, TYPE18, FUNC18, ARG18, TYPE19, FUNC19, ARG19,\
                        TYPE20, FUNC20, ARG20, TYPE21, FUNC21, ARG21 ) \
	typedef struct { \
		void *classImpl;\
		TYPE1 (*FUNC1) ARG1;\
		TYPE2 (*FUNC2) ARG2;\
		TYPE3 (*FUNC3) ARG3;\
		TYPE4 (*FUNC4) ARG4;\
		TYPE5 (*FUNC5) ARG5;\
		TYPE6 (*FUNC6) ARG6;\
		TYPE7 (*FUNC7) ARG7;\
		TYPE8 (*FUNC8) ARG8;\
		TYPE9 (*FUNC9) ARG9;\
		TYPE10 (*FUNC10) ARG10;\
		TYPE11 (*FUNC11) ARG11;\
		TYPE12 (*FUNC12) ARG12;\
		TYPE13 (*FUNC13) ARG13;\
		TYPE14 (*FUNC14) ARG14;\
		TYPE15 (*FUNC15) ARG15;\
		TYPE16 (*FUNC16) ARG16;\
		TYPE17 (*FUNC17) ARG17;\
		TYPE18 (*FUNC18) ARG18;\
		TYPE19 (*FUNC19) ARG19;\
		TYPE20 (*FUNC20) ARG20;\
		TYPE21 (*FUNC21) ARG21;\
	} INTERFACE_NAME##_o;\
	\
	typedef INTERFACE_NAME##_o* INTERFACE_NAME;\
	\
	char* InterfaceConfigFuncName_##INTERFACE_NAME[] = { #FUNC1, #FUNC2, #FUNC3, #FUNC4, #FUNC5, #FUNC6, #FUNC7, #FUNC8, #FUNC9, #FUNC10, #FUNC11, #FUNC12, #FUNC13, #FUNC14, #FUNC15, #FUNC16, #FUNC17, #FUNC18, #FUNC19, #FUNC20, #FUNC21 };\
	\
	INTERFACE_NAME##_o _interfaceVarRef##INTERFACE_NAME;\
	\
	void* _interfaceVarAddrRef##INTERFACE_NAME[] = {\
		&_interfaceVarRef##INTERFACE_NAME, &_interfaceVarRef##INTERFACE_NAME.FUNC1,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC2, &_interfaceVarRef##INTERFACE_NAME.FUNC3,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC4, &_interfaceVarRef##INTERFACE_NAME.FUNC5,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC6, &_interfaceVarRef##INTERFACE_NAME.FUNC7,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC8, &_interfaceVarRef##INTERFACE_NAME.FUNC9,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC10, &_interfaceVarRef##INTERFACE_NAME.FUNC11,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC12, &_interfaceVarRef##INTERFACE_NAME.FUNC13,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC14, &_interfaceVarRef##INTERFACE_NAME.FUNC15,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC16, &_interfaceVarRef##INTERFACE_NAME.FUNC17,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC18, &_interfaceVarRef##INTERFACE_NAME.FUNC19,\
		&_interfaceVarRef##INTERFACE_NAME.FUNC20, &_interfaceVarRef##INTERFACE_NAME.FUNC21 };\
	\
	interfaceConfig_t InterfaceConfig_##INTERFACE_NAME = {\
	 .func = (char**)InterfaceConfigFuncName_##INTERFACE_NAME,\
	 .numFunc = 21, ._sizeof = sizeof(INTERFACE_NAME##_o),\
	 .addr = (void**)_interfaceVarAddrRef##INTERFACE_NAME };

























































